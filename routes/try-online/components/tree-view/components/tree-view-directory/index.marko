import app from '../../../../routes/try-online/app';
import localStorageUtil from '../../../../util/localstorage';

class {
    onCreate(input) {
        var focusedFile = app.focusedFile;

        var expanded = false;
        var focused = false;

        if (focusedFile) {
            if (focusedFile === input.dir.path) {
                expanded = true;
                focused = true;
            } else if (focusedFile.startsWith(input.dir.path + '/')) {
                expanded = true;
            }
        }

        if (input.expanded) {
            expanded = true;
        }

        this.state = {
            focused: focused,
            expanded: expanded
        }
    }

    onMount() {
        var dir = this.input.dir;

        this.subscribeTo(app)
            .on('focus:change', (focusedFile) => {
                var isFocused = dir.path === focusedFile;

                if (!isFocused && focusedFile.startsWith(dir.path + '/')) {
                    this.state.expanded = true;
                }
                // if (isFocused) {
                //     expanded = true;
                //     focused = true;
                // } else if (focusedFile.startsWith(input.dir.path + '/')) {
                //     expanded = true;
                // }
                //
                //
                // if (isFocused && !this.state.focused) {
                //     this.state.expanded = true;
                // }
                //
                // if (isFocused !== this.state.focused) {
                //     this.state.expanded = true;
                // }
                //
                // if (!isFocused && focusedFile.startsWith(dir.path)) {
                //     this.state.expanded = true;
                // }

                this.state.focused = isFocused;

                // return dir.path === input.focusedDirectory || input.focusedDirectory.startsWith(dir.path + '/');
            });
    }

    handleClick(event) {
        event.stopPropagation();

        this.focusedFile

        if (this.state.focused) {
            this.state.expanded = !this.state.expanded;
        } else {
            this.state.focused = true;
            this.state.expanded = true;
            app.focusFile(this.input.dir.path);
        }


    }
}

$ var dir = input.dir;

<li.dir class={ focused: state.focused, expanded: state.expanded } on-click('handleClick')>
    <label>
        ${dir.name}
    </label>
    <if(dir.files)>
        <ul>
            <for(file in dir.sortedFiles)>
                <if(!app.isHiddenFile(file))>
                    <tree-view-item file=file key=file.path/>
                </if>
            </for>
        </ul>
    </if>
</li>
